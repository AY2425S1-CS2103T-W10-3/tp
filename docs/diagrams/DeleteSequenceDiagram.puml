@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete John")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete John")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("John")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

alt Person not found
    DeleteCommand -> LogicManager : throw CommandException
    LogicManager -> MainWindow : showError("Invalid person name")
else Duplicate person detected
    DeleteCommand -> Model : updateFilteredPersonListWithDuplicates("John")
        activate Model

        Model --> DeleteCommand
        deactivate Model

        DeleteCommand -> LogicManager : return CommandResult("Duplicate persons found. Please delete by index.")
        LogicManager -> MainWindow : showResult("Duplicate persons found. Please delete by index.")
else Valid person
    DeleteCommand -> Model : deletePerson("John")
    activate Model

    Model --> DeleteCommand
    deactivate Model

    create CommandResult
    DeleteCommand -> CommandResult
    activate CommandResult

    CommandResult --> DeleteCommand
    deactivate CommandResult

    DeleteCommand --> LogicManager : r
    deactivate DeleteCommand



    LogicManager -> MainWindow : showResult("Deleted Person: John Doe")
end

[<--LogicManager
deactivate LogicManager
@enduml
